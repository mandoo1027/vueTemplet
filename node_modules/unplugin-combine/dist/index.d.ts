import { PluginType, OptionsPlugin, PluginMap, Factory, UnpluginCombineInstance } from './types.js';
export { CombineOptions, FactoryOutput, Plugin, Unplugin, WebpackPlugin } from './types.js';
export { Plugin as RollupPlugin } from 'rollup';
export { Plugin as VitePlugin } from 'vite';
export { Plugin as EsbuildPlugin } from 'esbuild';
import 'unplugin';
import 'webpack';

declare function resolvePlugins<T extends PluginType>(plugins: OptionsPlugin, type: T): Array<PluginMap[T]>;
declare const createCombinePlugin: <UserOptions>(factory: Factory<UserOptions>) => UnpluginCombineInstance<UserOptions>;

export { Factory, OptionsPlugin, PluginMap, PluginType, UnpluginCombineInstance, createCombinePlugin, resolvePlugins };
