import { MagicString, SFCScriptBlock } from '@vue-macros/common';
import { Program, TSType } from '@babel/types';

declare const PROPS_VARIABLE_NAME: string;
declare const EMIT_VARIABLE_NAME: string;

interface TransformOptions {
    id: string;
    s: MagicString;
    offset: number;
    scriptSetup: SFCScriptBlock;
    setupAst: Program;
    isProduction: boolean;
}

interface Prop {
    name: string;
    definition?: string;
    typeParameter?: TSType;
}
declare function transformDefineProp(options: TransformOptions): Promise<void>;

declare function transformDefineEmit({ setupAst, offset, s }: TransformOptions): void;

declare function transformDefineSingle(code: string, id: string, isProduction: boolean): Promise<{
    code: string;
    map: any;
} | undefined>;

export { EMIT_VARIABLE_NAME, PROPS_VARIABLE_NAME, Prop, TransformOptions, transformDefineEmit, transformDefineProp, transformDefineSingle };
