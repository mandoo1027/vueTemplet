import {
  transformBetterDefine
} from "./chunk-W5ODBUYZ.mjs";

// src/index.ts
import { createUnplugin } from "unplugin";
import {
  REGEX_SETUP_SFC,
  REGEX_VUE_SFC,
  REGEX_VUE_SUB,
  createFilter,
  detectVueVersion
} from "@vue-macros/common";
import { RollupResolve, setResolveTSFileIdImpl } from "@vue-macros/api";
function resolveOptions(options, framework) {
  const version = options.version || detectVueVersion();
  return {
    include: [REGEX_VUE_SFC, REGEX_SETUP_SFC].concat(
      version === 2 && framework === "webpack" ? REGEX_VUE_SUB : []
    ),
    isProduction: process.env.NODE_ENV === "production",
    ...options,
    version
  };
}
var name = "unplugin-vue-better-define";
var src_default = createUnplugin(
  (userOptions = {}, { framework }) => {
    const options = resolveOptions(userOptions, framework);
    const filter = createFilter(options);
    const { resolve, handleHotUpdate } = RollupResolve();
    return {
      name,
      enforce: "pre",
      buildStart() {
        if (framework === "rollup" || framework === "vite") {
          setResolveTSFileIdImpl(resolve(this));
        }
      },
      transformInclude(id) {
        return filter(id);
      },
      async transform(code, id) {
        try {
          return await transformBetterDefine(code, id, options.isProduction);
        } catch (err) {
          this.warn(`${name} ${err}`);
          console.warn(err);
        }
      },
      vite: {
        configResolved(config) {
          options.isProduction = config.isProduction;
        },
        handleHotUpdate
      }
    };
  }
);

export {
  src_default
};
